// Generated by view binder compiler. Do not edit!
package com.example.adminhungryhopper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.adminhungryhopper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PendingOrderItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView customerName;

  @NonNull
  public final AppCompatButton orderAcceptButton;

  @NonNull
  public final ImageView orderFoodImage;

  @NonNull
  public final TextView quantity;

  @NonNull
  public final TextView textView14;

  private PendingOrderItemBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull TextView customerName, @NonNull AppCompatButton orderAcceptButton,
      @NonNull ImageView orderFoodImage, @NonNull TextView quantity, @NonNull TextView textView14) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.customerName = customerName;
    this.orderAcceptButton = orderAcceptButton;
    this.orderFoodImage = orderFoodImage;
    this.quantity = quantity;
    this.textView14 = textView14;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PendingOrderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PendingOrderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pending_order_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PendingOrderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.customerName;
      TextView customerName = ViewBindings.findChildViewById(rootView, id);
      if (customerName == null) {
        break missingId;
      }

      id = R.id.orderAcceptButton;
      AppCompatButton orderAcceptButton = ViewBindings.findChildViewById(rootView, id);
      if (orderAcceptButton == null) {
        break missingId;
      }

      id = R.id.orderFoodImage;
      ImageView orderFoodImage = ViewBindings.findChildViewById(rootView, id);
      if (orderFoodImage == null) {
        break missingId;
      }

      id = R.id.quantity;
      TextView quantity = ViewBindings.findChildViewById(rootView, id);
      if (quantity == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      return new PendingOrderItemBinding((ConstraintLayout) rootView, cardView, customerName,
          orderAcceptButton, orderFoodImage, quantity, textView14);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
